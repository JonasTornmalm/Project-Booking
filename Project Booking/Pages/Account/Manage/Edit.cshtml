@page
@model Project_Booking.EditModel
@{
    ViewData["Title"] = "Edit";
    ViewData["ActivePage"] = ManageNavPages.MyBookings;
}

<h4>Edit Booking</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CurrentBooking.ID" />
            <input type="hidden" asp-for="CurrentBooking.HotelID" />
            <div class="form-group">
                <label asp-for="CurrentBooking.Name" class="control-label"></label>
                <input asp-for="CurrentBooking.Name" class="form-control dateChange" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.Name, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-group">
                <label asp-for="CurrentBooking.LastName" class="control-label"></label>
                <input asp-for="CurrentBooking.LastName" class="form-control dateChange" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.LastName, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-group">
                <label asp-for="CurrentBooking.CheckIn" class="control-label"></label>
                <input id="checkin" asp-for="CurrentBooking.CheckIn" class="form-control dateChange" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.CheckIn, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-group">
                <label asp-for="CurrentBooking.CheckOut" class="control-label"></label>
                <input id="checkout" asp-for="CurrentBooking.CheckOut" class="form-control dateChange" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.CheckOut, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-inline">
                <button style="display:none" id="checkDates" type="submit" class="btn btn-primary" asp-page-handler="PickDates">Check dates</button>
                <input type="hidden" name="currentBookingTakenRooms" value="@Model.CurrentBookingTakenRooms"/>
                <span hidden style="margin-left:10px" id="availableDays">@Model.NumberOfAvailableRooms</span>
            </div>
            <div>
                <label>Total days</label>
                <p class="form-control-sm alert-light" disabled id="days"></p>
            </div>
            <label>Price per room</label>
            <p class="form-control-sm alert-light" disabled id="price">@Model.CurrentHotel.RoomPrice</p>
            <div class="form-group">
                <label asp-for="CurrentBooking.numOfBookedRooms">Number Of Rooms</label>
                <input id="numroom" onchange="updateDue()" asp-for="CurrentBooking.numOfBookedRooms" class="form-control dateChange" max="10" min="1" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.numOfBookedRooms, "", new { @class = "alertMessages newLine" })
            </div>
            <div>
                <label>Total price</label>
                <input name="totalPrice" class="form-control-sm alert-light table-responsive" disabled id="totalPrice">
            </div><br />
            <div>
                <span id="warning" style="display:none" class="alertMessages newLine"></span>
            </div><br />
            <div class="form-group">
                <input id="editButton" asp-page-handler="Save" type="submit" value="Save" class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="btn btn-primary" asp-page="/Account/Manage/MyBookings">Back to List</a>
</div>


<script>

    //window.onload = startUpFunction();
    document.addEventListener("load", startUpFunction());

    function updateDue() {

        var rooms = parseInt(document.getElementById("numroom").value);
        var price = parseInt(document.getElementById("price").innerHTML);
        var days = parseInt(document.getElementById("days").innerHTML);
        var warning = document.getElementById("warning");
        var availableDays = parseInt(document.getElementById("availableDays").innerHTML);
        // to make sure that they are numbers
        if (!rooms) { rooms = 0; }
        if (!price) { price = 0; }

        warning.style.display = 'none';

        var calcCost = document.getElementById("totalPrice");
        calcCost.value = rooms * price * days;

        if (days < 1) {
            warning.innerHTML = "Choose a checkout date that is after the checkin"
            warning.style.display = 'block';
        }
        if (availableDays < rooms) {
            warning.innerHTML = "There is only " + availableDays + " rooms left during those days";
            warning.style.display = 'block';
        }
    }

    var dateChanges = document.querySelectorAll('.dateChange')
    Array.from(dateChanges).forEach(link => {
    link.addEventListener("change", function () {
        var lastday = new Date(document.getElementById("checkout").value);
        var firstday = new Date(document.getElementById("checkin").value);
        var timeDiff = (lastday.getTime() - firstday.getTime());
        var daysDiff = timeDiff / (1000 * 3600 * 24);
        
        document.getElementById("checkDates").style.display = 'block';
        document.getElementById("editButton").disabled = true;
        warning.style.display = 'none';
        //Checking if checkout is after checkin
        if (daysDiff <= 0) {
            warning.innerHTML = "Please check your dates";
            warning.style.display = 'block';
        }
        else
        {
            document.getElementById("days").innerHTML = daysDiff;
        }
    updateDue();
        })
    });

    function startUpFunction() {
        var editButton = document.getElementById("editButton");
        var rooms = parseInt(document.getElementById("numroom").value);
        var availableDays = parseInt(document.getElementById("availableDays").innerHTML);
        var warning = document.getElementById("warning");

        var lastday = new Date(document.getElementById("checkout").value);
        var firstday = new Date(document.getElementById("checkin").value);
        var timeDiff = (lastday.getTime() - firstday.getTime());
        var daysDiff = timeDiff / (1000 * 3600 * 24);
        warning.style.display = 'none';

        if (daysDiff > 0 && availableDays >= rooms) {
            editButton.disabled = false;
        }
        else {
            editButton.disabled = true;
        }
    };



</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="~/js/edit.js"></script>
}