@page
@model Project_Booking.BookingModel
@{
    ViewData["Title"] = "Booking";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<style>
    .newLine {
        display: inline-flex;
    }
    .alert {
        margin-top: 5px;
        padding: 12px;
        color: white;
        font-weight: bolder;
        font-size: 15px;
        line-height: 18px;
        margin-bottom: 0px;
        background: rgba(250, 47, 58, 0.8);
    }
    .field-validation-valid
    {
        display: none;
    }
</style>

<div>
    <h1 style="text-align:center">@Model.CurrentHotel.HotelName</h1>
</div>
<div>
    <img src=@Model.CurrentHotel.HotelPictureBig class="responsive" width="1000" height="800">
</div><br />
<div class="row">
    <div class="col-md-4">
        <form method="post">

            <div class="form-group">
                <label asp-for="CurrentUser.UserName">Username</label>
                <input asp-for="CurrentUser.UserName" class="form-control" disabled />
                @Html.ValidationMessageFor(model => model.CurrentUser.UserName, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-group">
                <label asp-for="CurrentBooking.Name"></label>
                <input asp-for="CurrentBooking.Name" class="form-control" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.Name, "", new { @class = "alertMessages newLine" })
            </div>
            <div class="form-group">
                <label asp-for="CurrentBooking.LastName"></label>
                <input asp-for="CurrentBooking.LastName" class="form-control" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.LastName, "", new { @class = "alertMessages newLine" })
            </div>

            <input id="checkin" class="dateChange" type="hidden" asp-for="CurrentBooking.CheckIn" value="@Model.CheckIn"/>
            <input id="checkout" class="dateChange" type="hidden" asp-for="CurrentBooking.CheckOut" value="@Model.CheckOut"/>

            <div>
                <label>Total days</label>
                <p class="form-control-sm alert-light" disabled id="days"></p>
            </div>
            <label>Price per room</label>
            <p class="form-control-sm alert-light" disabled id="price">@Model.CurrentHotel.RoomPrice</p>
            <div class="form-group">
                <label asp-for="CurrentBooking.numOfBookedRooms">Number Of Rooms<br /><span style="font-size:80%">You can book up to @Model.maxRoomsToBook rooms</span></label>
                <input id="numroom" onchange="updateDue()" asp-for="CurrentBooking.numOfBookedRooms" class="form-control dateChange" max=@Model.maxRoomsToBook min="1" />
                @Html.ValidationMessageFor(model => model.CurrentBooking.numOfBookedRooms, "", new { @class = "alertMessages newLine" })
            </div>
            <div>
                <label>Total price</label>
                <input name="totalPrice" class="form-control-sm alert-light table-responsive" disabled id="totalPrice">
            </div><br />
            <button id="submitButton" asp-route="@Model.CurrentHotel.Id" type="submit" class="btn btn-primary">Confirm</button>
        </form>
    </div>
</div>

<script>
    function updateDue() {

        var rooms = parseInt(document.getElementById("numroom").value);
        var price = parseInt(document.getElementById("price").innerHTML);
        var days = parseInt(document.getElementById("days").innerHTML);
        // to make sure that they are numbers
        if (!rooms) { rooms = 0; }
        if (!price) { price = 0; }
        
        if (isNaN(days)) {
            document.getElementById("days").innerHTML = "Pick both dates"
        }
        else {
            var calcCost = document.getElementById("totalPrice");
            calcCost.value = rooms * price * days;
        }
    }

    var dateChanges = document.querySelectorAll('.dateChange')
    Array.from(dateChanges).forEach(link => {
        link.addEventListener("change", countTotalDays)
    });

    window.onload = countTotalDays();

    function countTotalDays() {
        
        var lastday = new Date(document.getElementById("checkout").value);
        var firstday = new Date(document.getElementById("checkin").value);
        var timeDiff = (lastday.getTime() - firstday.getTime());
        var daysDiff = timeDiff / (1000 * 3600 * 24);

        if (daysDiff <= 0) {
            document.getElementById("days").innerHTML = "Pick a checkout date that is after the checkin date";
            document.getElementById("submitButton").disabled = true;
        }
        else
        {
            document.getElementById("days").innerHTML = daysDiff;
            document.getElementById("submitButton").disabled = false;
        }
        updateDue();
    }

</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}